services:
  kafka-controller:
    image: bitnami/kafka:latest
    container_name: kafka-controller
    ports:
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CONTROLLER://kafka-controller:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
      - KAFKA_CFG_PROCESS_ROLES=controller
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_KRAFT_CLUSTER_ID=3Ea9E2Zs5uwC85VCEynr8A
    volumes:
      - controller_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "echo 'Checking Controller' && timeout 5 bash -c '</dev/tcp/localhost/9093' || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 15
    networks:
      - kafka-net

  kafka-broker:
    image: bitnami/kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_KRAFT_CLUSTER_ID=3Ea9E2Zs5uwC85VCEynr8A
    depends_on:
      - kafka-controller
    volumes:
      - broker_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "echo 'Checking Broker' && timeout 5 bash -c '</dev/tcp/localhost/9092' || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 15
    networks:
      - kafka-net


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-broker:9092
    depends_on:
      - kafka-broker
    restart: unless-stopped
    networks:
      - kafka-net

  rfid-service:
    build:
      dockerfile: Dockerfile
    container_name: rfid-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker:9092
      - SPRING_APPLICATION_NAME=rfid-emulator
    depends_on:
      kafka-broker:
        condition: service_healthy
    networks:
      - kafka-net

volumes:
  controller_data:
    driver: local
  broker_data:
    driver: local

networks:
  kafka-net:
    driver: bridge